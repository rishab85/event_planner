package systemPD;
// Generated Jul 27, 2017 1:50:20 PM by Hibernate Tools 4.3.1.Final

import java.math.BigInteger;
import java.security.SecureRandom;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Date;
import java.util.Random;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

/**
 * Token generated by hbm2java
 */
@XmlRootElement
@Entity
@Table(name = "token", catalog = "event_planner")
public class Token implements java.io.Serializable {

	private Integer tokenId;
	private String token;
	private Date tokenExpire;
	private int userId;
	private UserProfile user;
	public Token() {
		
	}

	public Token(UserProfile user) {
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
		setUserId(user.getUserId());
	    Random random = new SecureRandom();
	    String token = new BigInteger(130, random).toString(32);
	    setToken(token);
	    Date date = new Date();
	    setTokenExpire(date);
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "token_id", unique = true, nullable = false)
	public Integer getTokenId() {
		return this.tokenId;
	}

	
	public void setTokenId(Integer tokenId) {
		this.tokenId = tokenId;
	}

	@Column(name = "token", nullable = false, length = 100)
	public String getToken() {
		return this.token;
	}
	@XmlElement
	public void setToken(String token) {
		this.token = token;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "token_expire", nullable = false, length = 10)
	public Date getTokenExpire() {
		return this.tokenExpire;
	}
	@XmlElement
	public void setTokenExpire(Date tokenExpire) {
		this.tokenExpire = tokenExpire;
	}

	@Column(name = "user_id", nullable = false)
	public int getUserId() {
		return this.userId;
	}
	
	@XmlElement
	public void setUserId(int userId) {
		this.userId = userId;
	}

	@ManyToOne
	@JoinColumn(name="user_id",  insertable=false, updatable=false)		
	public UserProfile getUser() {
		return user;
	}

	public void setUser(UserProfile user) {
		this.user = user;
	}

	public void generateToken(UserProfile user){
		
	}
	
	public Token getTokenByToken(String tokenString){
		Configuration cfg = new Configuration();
		cfg.configure("hibernate.cfg.xml");
		SessionFactory sf = cfg.buildSessionFactory();
		Session s = sf.openSession();
		Transaction tx = s.beginTransaction();
		ArrayList<Token> tkn =(ArrayList<Token>) s.createQuery("from Token where token = ?").setParameter(0, tokenString).list();
		s.flush();
		tx.commit();
		s.close();
		
		return tkn.get(0);
		
	}
	
	public Boolean validate(){
		return LocalDate.now().equals(getTokenExpire());
	}
}
